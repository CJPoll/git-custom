#! /usr/bin/env ruby
require 'git_command'

def current_branch
  branches = `git branch`
  branches.split(/\n/).grep(/\*/).first.split.last
end

def exists?(branch)
  branches = `git branch`.split(/\n/)
  branches = branches.map do |branch_name|
    branch_name.strip!
    branch_name.slice!('* ') if branch_name.match(/\* /)
    branch_name
  end

  branches.include? branch
end

def patchset?(branch)
  !branch.match( /-patchset$/ ).nil?
end

command :push do |branch: 'HEAD'|
	`git push origin HEAD:refs/for/master`
end

command :pull do |branch: 'HEAD'|
  `git pull --rebase origin master`
end

command :clone do |repo_name: 'canvas-lms'|
	`git clone gerrit:#{repo_name}`
end

command :squash do
  original_branch = current_branch
  next if patchset?(original_branch) # return if on a patchset branch

  patchset_branch = "#{ original_branch }-patchset"
  new_branch = !(exists?(patchset_branch))
  system "git checkout master"

  if new_branch
    system "git checkout -b #{ patchset_branch }"
    system "git merge --squash #{ original_branch }"
    system "git commit -v"
  else
    system "git checkout #{ patchset_branch }"
    system "git merge --squash #{ original_branch }"
    system "git commit -v --amend"
  end

  system "git checkout #{ original_branch }"
end

command :submit do
  system 'git gerrit squash'
  system 'git gerrit push'
end
